Create a file named openssl.cnf with the following content:

[req]
default_bits = 2048
prompt = no
default_md = sha256
distinguished_name = dn

[dn]
C = ID
ST = Some-State
O = Internet Widgits Pty Ltd
CN = localhost

[v3_ca]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[v3_req]
subjectAltName = @alt_names

[alt_names]
DNS.1 = localhost
IP.1 = 127.0.0.1


Replace localhost and 127.0.0.1 with the appropriate hostnames and IP addresses for your server

# Generate CA private key
openssl genpkey -algorithm RSA -out ca.key

# Generate CA certificate
openssl req -new -x509 -key ca.key -out ca.crt -days 365 -extensions v3_ca -config openssl.cnf

# Generate server private key
openssl genpkey -algorithm RSA -out server.key

# Generate server CSR
openssl req -new -key server.key -out server.csr -config openssl.cnf

# Sign the server CSR with the CA
openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days 365 -extensions v3_req -extfile openssl.cnf

# Generate client private key
openssl genpkey -algorithm RSA -out client.key

# Generate client CSR
openssl req -new -key client.key -out client.csr -config openssl.cnf

# Sign the client CSR with the CA
openssl x509 -req -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out client.crt -days 365 -extensions v3_req -extfile openssl.cnf